# https://aka.ms/yaml

trigger:
  - master

variables:
    regression: 1

jobs:
  - job: build_ubuntu_1604
    displayName: Ubuntu 1604
    pool:
      vmImage: 'Ubuntu-16.04'

    strategy:
      matrix:
        avx2:
          SIMD: 'AVX2'
          STATIC: 1
          MPI: 0
        sse:
          SIMD: 'SSE4_1'
          STATIC: 1
          MPI: 0
        avx2_mpi:
          SIMD: 'AVX2'
          STATIC: 0
          MPI: 1

    steps:
      - script: |
          sudo apt-get update
          sudo apt-get -y install mpi-default-dev mpi-default-bin
        displayName: Install Dependencies
        condition: eq(variables['MPI'], 1)
      - script: |
          mkdir build && cd build
          if [ "${STATIC}" -eq "1" ]; then
              cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -DBUILD_SHARED_LIBS=OFF \
                -DCMAKE_EXE_LINKER_FLAGS="-static -static-libgcc \
                -static-libstdc++" -DCMAKE_FIND_LIBRARY_SUFFIXES=".a" \
                -DENABLE_WERROR=1 -DHAVE_${SIMD}=1 -DHAVE_MPI=${MPI} ..
          else
              cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo \
                -DENABLE_WERROR=1 -DHAVE_${SIMD}=1 -DHAVE_MPI=${MPI} ..
          fi

          make -j $(nproc --all)
        displayName: Build MetaEuk
      - script: |
          cd ${BUILD_SOURCESDIRECTORY}/tests
          ./run.sh "${BUILD_SOURCESDIRECTORY}/build/src/metaeuk"
        displayName: Run Regression Suite
        condition: eq(variables['regression'], 1)
      - task: PublishPipelineArtifact@0
        condition: eq(variables['STATIC'], 1)
        inputs:
          targetPath: $(Build.SourcesDirectory)/build/src/metaeuk
          artifactName: metaeuk-linux-$(SIMD)

  - job: upload_artifacts
    displayName: Upload Artifacts
    condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
    pool:
      vmImage: 'Ubuntu-16.04'
    dependsOn:
      - build_ubuntu_1604
    steps:
      - script: |
          cd "${BUILD_SOURCESDIRECTORY}"
          mkdir metaeuk
          cp -f README.md LICENCE.md metaeuk
          mkdir metaeuk/bin
      - task: DownloadPipelineArtifact@1
        inputs:
          artifactName: metaeuk-linux-SSE4_1
          targetPath: $(Build.SourcesDirectory)/metaeuk/bin
      - script:
          chmod +x "${BUILD_SOURCESDIRECTORY}/metaeuk/bin/metaeuk"
      - task: ArchiveFiles@2
        inputs:
          rootFolderOrFile: $(Build.SourcesDirectory)/metaeuk
          archiveFile: $(Build.SourcesDirectory)/metaeuk-linux-sse41.tar.gz
          includeRootFolder: true
          archiveType: tar
      - task: DownloadPipelineArtifact@1
        inputs:
          artifactName: metaeuk-linux-AVX2
          targetPath: $(Build.SourcesDirectory)/metaeuk/bin
      - script:
          chmod +x "${BUILD_SOURCESDIRECTORY}/metaeuk/bin/metaeuk"
      - task: ArchiveFiles@2
        inputs:
          rootFolderOrFile: $(Build.SourcesDirectory)/metaeuk
          archiveFile: $(Build.SourcesDirectory)/metaeuk-linux-avx2.tar.gz
          includeRootFolder: true
          archiveType: tar
      - script:
          rm "${BUILD_SOURCESDIRECTORY}/metaeuk/bin/metaeuk"
      - task: DownloadSecureFile@1
        inputs:
          secureFile: azure_upload_metaeuk
        displayName: Get Deployment Key
      - script: |
          mkdir ~/.ssh && mv $DOWNLOADSECUREFILE_SECUREFILEPATH ~/.ssh/id_rsa
          chmod 700 ~/.ssh && chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -t rsa uniclust.mmseqs.com >> ~/.ssh/known_hosts
          cd "${BUILD_SOURCESDIRECTORY}"
          ssh codeship@uniclust.mmseqs.com "mkdir -p \"/home/mirdita/repositories/metaeuk/archive/${BUILD_SOURCEVERSION}\""
          scp metaeuk-linux-sse41.tar.gz metaeuk-linux-avx2.tar.gz codeship@uniclust.mmseqs.com:"/home/mirdita/repositories/metaeuk/archive/${BUILD_SOURCEVERSION}"
          ssh codeship@uniclust.mmseqs.com "update-latest-metaeuk.sh \"${BUILD_SOURCEVERSION}\""
